name: Deploy

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy to Cloudflare Workers
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
          
      - name: Setup pnpm store
        shell: bash
        run: |
          echo "STORE_PATH=/home/runner/.local/share/pnpm/store/v10" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        
      # Add environment check
      - name: Check required secrets
        run: |
          [ -n "${{ secrets.VITE_WEBFLOW_CLIENT_ID }}" ] || exit 1
          [ -n "${{ secrets.CLOUDFLARE_API_TOKEN }}" ] || exit 1
          [ -n "${{ secrets.OPENAI_API_KEY }}" ] || exit 1
      
      - name: Build application
        run: pnpm build
        env:
          NODE_ENV: production
          VITE_WEBFLOW_EXTENSION: true
          USE_GPT_RECOMMENDATIONS: true
          VITE_WEBFLOW_API_KEY: ${{ secrets.VITE_WEBFLOW_API_KEY }}
          VITE_WEBFLOW_SITE_ID: ${{ secrets.VITE_WEBFLOW_SITE_ID }}
          VITE_WEBFLOW_CLIENT_ID: ${{ secrets.VITE_WEBFLOW_CLIENT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          
      - name: Validate build output
        run: |
          if [ ! -d "public" ]; then
            echo "Build output directory (public) is missing"
            exit 1
          fi
          
      - name: Create bundle archive
        run: zip -r bundle.zip public/

      - name: Upload bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: bundle
          path: bundle.zip
          retention-days: 5
        
      - name: Deploy to Cloudflare Workers
        run: |
          # Install wrangler globally to use directly
          npm install -g wrangler
          
          # Create a temporary wrangler.toml file that targets the correct endpoint
          cat > wrangler-deploy.toml << EOF
          name = "seo-copilot-api"
          main = "./workers/index.ts"
          compatibility_date = "2024-09-23"
          compatibility_flags = ["nodejs_compat"]
          route = "seo-copilot-api.paul-130.workers.dev/*"
          
          [vars]
          USE_GPT_RECOMMENDATIONS = "true"
          ALLOWED_ORIGINS = "https://webflow.com,https://*.webflow-ext.com,https://*.webflow.io"
          EOF
          
          # Deploy using the custom config
          CLOUDFLARE_API_TOKEN="${{ secrets.CLOUDFLARE_API_TOKEN }}" \
          CLOUDFLARE_ACCOUNT_ID="${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" \
          OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
          WEBFLOW_CLIENT_SECRET="${{ secrets.WEBFLOW_CLIENT_SECRET }}" \
          WEBFLOW_CLIENT_ID="${{ secrets.WEBFLOW_CLIENT_ID }}" \
          WEBFLOW_REDIRECT_URI="${{ secrets.WEBFLOW_REDIRECT_URI }}" \
          wrangler deploy --config wrangler-deploy.toml